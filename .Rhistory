wektorLinkow <- c(wektorLinkow, pracownik[2])
}
}
print("Zakonczono pobieranie!")
return(wektorLinkow[!is.na(wektorLinkow)])
}
# Pobieranie linkow pracownikow
linki <- pobierzLinki()
# Opracowanie danych pracownika
require("stringr")
ramka <- data.frame()
for (link in linki) {
dane <- read_html(paste("https://", link, sep = "")) %>%
html_node(xpath = '//*[@id="owner-content"]/div/ul') %>%
html_text2()
dane <- strsplit(dane, "\n")[[1]]
imie <- word(dane[1], -2)
nazwisko <- word(dane[1], -1)
tytul <- word(dane[1], 1, -3)
email <- word(dane[2], 2)
jednostka <- dane[3]
stanowisko <- word(dane[4], 2, -1)
pokoj <- word(dane[5], 2)
telefon <- word(dane[6], 2)
ramka <- rbind(ramka, c(imie, nazwisko, tytul, email, jednostka,
stanowisko, pokoj, telefon))
}
ramka
imiona <- c(); nazwiska <- c(); tytuly <- c(); emaile <- c();
jednostki <- c(); stanowiska <- c(); pokoje <- c(); telefony <- c();
imiona <- c(); nazwiska <- c(); tytuly <- c(); emaile <- c();
jednostki <- c(); stanowiska <- c(); pokoje <- c(); telefony <- c();
ramka <- data.frame()
for (link in linki) {
dane <- read_html(paste("https://", link, sep = "")) %>%
html_node(xpath = '//*[@id="owner-content"]/div/ul') %>%
html_text2()
dane <- strsplit(dane, "\n")[[1]]
imiona <- c(imiona, word(dane[1], -2))
nazwiska <- c(imiona, word(dane[1], -1))
tytuly <- c(imiona, word(dane[1], 1, -3))
emaile <- c(imiona, word(dane[2], 2))
jednostki <- c(imiona, dane[3])
stanowiska <- c(imiona, word(dane[4], 2, -1))
pokoje <- c(imiona, word(dane[5], 2))
telefony <- c(imiona, word(dane[6], 2))
}
danePracownikow <- data.frame(tytul = tytuly, imie = imiona,
nazwisko = nazwiska, email = emaile,
jednostka = jednostki, stanowisko = stanowiska,
pokoj = pokoje, telefon = telefony
)
danePracownikow <- data.frame(tytul = tytuly, imie = imiona,
nazwisko = nazwiska, email = emaile,
jednostka = jednostki, stanowisko = stanowiska,
pokoj = pokoje, telefon = telefony, fix.empty.names = T
)
length(tytuly)
length(imiona)
which(is.na(imiona))
imiona(700)
imiona[700]
imiona[701]
nazwiska[700]
nazwiska[701]
nazwiska[702]
imiona[702]
imiona[703]
nazwiska[703]
imiona <- c(); nazwiska <- c(); tytuly <- c(); emaile <- c();
jednostki <- c(); stanowiska <- c(); pokoje <- c(); telefony <- c();
ramka <- data.frame()
for (link in linki) {
dane <- read_html(paste("https://", link, sep = "")) %>%
html_node(xpath = '//*[@id="owner-content"]/div/ul') %>%
html_text2()
dane <- strsplit(dane, "\n")[[1]]
tytuly <- c(tytuly, word(dane[1], 1, -3))
imiona <- c(imiona, word(dane[1], -2))
nazwiska <- c(nazwiska, word(dane[1], -1))
emaile <- c(emaile, word(dane[2], 2))
jednostki <- c(jednostki, dane[3])
stanowiska <- c(stanowiska, word(dane[4], 2, -1))
pokoje <- c(pokoje, word(dane[5], 2))
telefony <- c(telefony, word(dane[6], 2))
}
danePracownikow <- data.frame(tytul = tytuly, imie = imiona,
nazwisko = nazwiska, email = emaile,
jednostka = jednostki, stanowisko = stanowiska,
pokoj = pokoje, telefon = telefony)
head(danePracownikow)
danePracownikow <- data.frame(
tytul=NULL,imie=NULL,nazwisko=NULL,email=NULL,jednostka=NULL,
stanowisko=NULL,pokoj=NULL,telefon=NULL)
danePracownikow
# Opracowanie danych pracownika
require("stringr")
danePracownikow <- data.frame(
tytul=NULL,imie=NULL,nazwisko=NULL,email=NULL,jednostka=NULL,
stanowisko=NULL,pokoj=NULL,telefon=NULL)
for (link in linki) {
dane <- read_html(paste("https://", link, sep = "")) %>%
html_node(xpath = '//*[@id="owner-content"]/div/ul') %>%
html_text2()
dane <- strsplit(dane, "\n")[[1]]
tytul <- word(dane[1], 1, -3)
imie <- word(dane[1], -2)
nazwisko <- word(dane[1], -1)
email <- word(dane[2], 2)
jednostka <- dane[3]
stanowisko <- word(dane[4], 2, -1)
pokoj <- word(dane[5], 2)
telefon <- word(dane[6], 2)
danePracownikow[nrow(danePracownikow)+1,] <-
c(tytul, imie, nazwisko, email, jednostka,
stanowisko, pokoj, telefon)
}
warnings()
head(danePracownikow)
length(linki)
pb <- txtProgressBar(min = 0, max = length(linki), initial = 0,
title = "Pobieranie danych")
imiona <- c(); nazwiska <- c(); tytuly <- c(); emaile <- c();
jednostki <- c(); stanowiska <- c(); pokoje <- c(); telefony <- c();
pb <- txtProgressBar(min = 0, max = length(linki), initial = 0,
title = "Pobieranie danych"); i <- 0
for (link in linki) {
dane <- read_html(paste("https://", link, sep = "")) %>%
html_node(xpath = '//*[@id="owner-content"]/div/ul') %>%
html_text2()
dane <- strsplit(dane, "\n")[[1]]
tytuly <- c(tytuly, word(dane[1], 1, -3))
imiona <- c(imiona, word(dane[1], -2))
nazwiska <- c(nazwiska, word(dane[1], -1))
emaile <- c(emaile, word(dane[2], 2))
jednostki <- c(jednostki, dane[3])
stanowiska <- c(stanowiska, word(dane[4], 2, -1))
pokoje <- c(pokoje, word(dane[5], 2))
telefony <- c(telefony, word(dane[6], 2))
setTxtProgressBar(pb, i <- i+1)
}
danePracownikow <- data.frame(tytul = tytuly, imie = imiona,
nazwisko = nazwiska, email = emaile,
jednostka = jednostki, stanowisko = stanowiska,
pokoj = pokoje, telefon = telefony)
head(danePracownikow)
?txtProgressBar
pb <- txtProgressBar(min = 0, max = length(linki), initial = 0,
title = "Pobieranie danych", width = 10); i <- 0
linki[1:10]
for (link in linki[1:100]) {
dane <- read_html(paste("https://", link, sep = "")) %>%
html_node(xpath = '//*[@id="owner-content"]/div/ul') %>%
html_text2()
dane <- strsplit(dane, "\n")[[1]]
tytuly <- c(tytuly, word(dane[1], 1, -3))
imiona <- c(imiona, word(dane[1], -2))
nazwiska <- c(nazwiska, word(dane[1], -1))
emaile <- c(emaile, word(dane[2], 2))
jednostki <- c(jednostki, dane[3])
stanowiska <- c(stanowiska, word(dane[4], 2, -1))
pokoje <- c(pokoje, word(dane[5], 2))
telefony <- c(telefony, word(dane[6], 2))
setTxtProgressBar(pb, i <- i+1)
}
pb <- txtProgressBar(min = 0, max = length(linki), initial = 0,
title = "Pobieranie danych"); i <- 0
for (link in linki[1:100]) {
dane <- read_html(paste("https://", link, sep = "")) %>%
html_node(xpath = '//*[@id="owner-content"]/div/ul') %>%
html_text2()
dane <- strsplit(dane, "\n")[[1]]
tytuly <- c(tytuly, word(dane[1], 1, -3))
imiona <- c(imiona, word(dane[1], -2))
nazwiska <- c(nazwiska, word(dane[1], -1))
emaile <- c(emaile, word(dane[2], 2))
jednostki <- c(jednostki, dane[3])
stanowiska <- c(stanowiska, word(dane[4], 2, -1))
pokoje <- c(pokoje, word(dane[5], 2))
telefony <- c(telefony, word(dane[6], 2))
setTxtProgressBar(pb, i <- i+1)
}
pb <- txtProgressBar(min = 0, max = length(linki), initial = 0); i <- 0
print("Pobieranie danych...")
for (link in linki[1:100]) {
dane <- read_html(paste("https://", link, sep = "")) %>%
html_node(xpath = '//*[@id="owner-content"]/div/ul') %>%
html_text2()
dane <- strsplit(dane, "\n")[[1]]
tytuly <- c(tytuly, word(dane[1], 1, -3))
imiona <- c(imiona, word(dane[1], -2))
nazwiska <- c(nazwiska, word(dane[1], -1))
emaile <- c(emaile, word(dane[2], 2))
jednostki <- c(jednostki, dane[3])
stanowiska <- c(stanowiska, word(dane[4], 2, -1))
pokoje <- c(pokoje, word(dane[5], 2))
telefony <- c(telefony, word(dane[6], 2))
setTxtProgressBar(pb, i <- i+1)
}
pb <- txtProgressBar(min = 0, max = length(linki), initial = 0,
style = 2); i <- 0
print("Pobieranie danych...")
for (link in linki[1:100]) {
dane <- read_html(paste("https://", link, sep = "")) %>%
html_node(xpath = '//*[@id="owner-content"]/div/ul') %>%
html_text2()
dane <- strsplit(dane, "\n")[[1]]
tytuly <- c(tytuly, word(dane[1], 1, -3))
imiona <- c(imiona, word(dane[1], -2))
nazwiska <- c(nazwiska, word(dane[1], -1))
emaile <- c(emaile, word(dane[2], 2))
jednostki <- c(jednostki, dane[3])
stanowiska <- c(stanowiska, word(dane[4], 2, -1))
pokoje <- c(pokoje, word(dane[5], 2))
telefony <- c(telefony, word(dane[6], 2))
setTxtProgressBar(pb, i <- i+1)
}
pb <- txtProgressBar(min = 0, max = length(linki), initial = 0,
style = 3); i <- 0
print("Pobieranie danych...")
for (link in linki[1:100]) {
dane <- read_html(paste("https://", link, sep = "")) %>%
html_node(xpath = '//*[@id="owner-content"]/div/ul') %>%
html_text2()
dane <- strsplit(dane, "\n")[[1]]
tytuly <- c(tytuly, word(dane[1], 1, -3))
imiona <- c(imiona, word(dane[1], -2))
nazwiska <- c(nazwiska, word(dane[1], -1))
emaile <- c(emaile, word(dane[2], 2))
jednostki <- c(jednostki, dane[3])
stanowiska <- c(stanowiska, word(dane[4], 2, -1))
pokoje <- c(pokoje, word(dane[5], 2))
telefony <- c(telefony, word(dane[6], 2))
setTxtProgressBar(pb, i <- i+1)
}
pb <- txtProgressBar(min = 0, max = length(linki), initial = 0,
style = 3); i <- -1
print("Pobieranie danych...")
for (link in linki) {
dane <- read_html(paste("https://", link, sep = "")) %>%
html_node(xpath = '//*[@id="owner-content"]/div/ul') %>%
html_text2()
dane <- strsplit(dane, "\n")[[1]]
tytuly <- c(tytuly, word(dane[1], 1, -3))
imiona <- c(imiona, word(dane[1], -2))
nazwiska <- c(nazwiska, word(dane[1], -1))
emaile <- c(emaile, word(dane[2], 2))
jednostki <- c(jednostki, dane[3])
stanowiska <- c(stanowiska, word(dane[4], 2, -1))
pokoje <- c(pokoje, word(dane[5], 2))
telefony <- c(telefony, word(dane[6], 2))
setTxtProgressBar(pb, i <- i+1)
}
pobierzLinki <- function() {
require("rvest")
pb <- txtProgressBar(min = 0, max = length(letters), initial = 0, style = 3); i <- -1
print("Prosze czekac, trwa pobieranie linkow...")
wektorLinkow <- c()
for (letter in letters) {
linki <- read_html(paste("http://v.prz.edu.pl/?alph=", letter, sep = "")) %>%
html_node("tbody") %>%
html_text2()
pracownicy <- strsplit(linki, "\n")[[1]]
for (pracownik in pracownicy) {
pracownik <- strsplit(pracownik, "\t")[[1]]
wektorLinkow <- c(wektorLinkow, pracownik[2])
}
setTxtProgressBar(pb, i <- i+1)
}
return(wektorLinkow[!is.na(wektorLinkow)])
}
# Pobieranie linkow pracownikow
linki <- pobierzLinki()
pobierzLinki <- function() {
require("rvest")
pb <- txtProgressBar(min = 0, max = length(letters), initial = 0, style = 3); i <- -1
print("Prosze czekac, trwa pobieranie linkow...")
wektorLinkow <- c()
for (letter in letters) {
linki <- read_html(paste("http://v.prz.edu.pl/?alph=", letter, sep = "")) %>%
html_node("tbody") %>%
html_text2()
pracownicy <- strsplit(linki, "\n")[[1]]
for (pracownik in pracownicy) {
pracownik <- strsplit(pracownik, "\t")[[1]]
wektorLinkow <- c(wektorLinkow, pracownik[2])
}
setTxtProgressBar(pb, i <- i+1)
}
return(wektorLinkow[!is.na(wektorLinkow)])
}
# Pobieranie linkow pracownikow
linki <- pobierzLinki()
pobierzLinki <- function() {
require("rvest")
pb <- txtProgressBar(min = 0, max = length(letters), initial = 0, style = 3); i <- 0
print("Prosze czekac, trwa pobieranie linkow...")
wektorLinkow <- c()
for (letter in letters) {
linki <- read_html(paste("http://v.prz.edu.pl/?alph=", letter, sep = "")) %>%
html_node("tbody") %>%
html_text2()
pracownicy <- strsplit(linki, "\n")[[1]]
for (pracownik in pracownicy) {
pracownik <- strsplit(pracownik, "\t")[[1]]
wektorLinkow <- c(wektorLinkow, pracownik[2])
}
setTxtProgressBar(pb, i <- i+1)
}
return(wektorLinkow[!is.na(wektorLinkow)])
}
# Pobieranie linkow pracownikow
linki <- pobierzLinki()
pobierzLinki <- function() {
require("rvest")
pb <- txtProgressBar(min = 0, max = length(letters), initial = 0, style = 3); i <- 0
wektorLinkow <- c()
for (letter in letters) {
linki <- read_html(paste("http://v.prz.edu.pl/?alph=", letter, sep = "")) %>%
html_node("tbody") %>%
html_text2()
pracownicy <- strsplit(linki, "\n")[[1]]
for (pracownik in pracownicy) {
pracownik <- strsplit(pracownik, "\t")[[1]]
wektorLinkow <- c(wektorLinkow, pracownik[2])
}
setTxtProgressBar(pb, i <- i+1)
}
return(wektorLinkow[!is.na(wektorLinkow)])
}
# Pobieranie linkow pracownikow
linki <- pobierzLinki()
pobierzLinki <- function() {
require("rvest")
print("Prosze czekac, trwa pobieranie linkow...")
pb <- txtProgressBar(min = 0, max = length(letters), initial = 0, style = 3); i <- 0
wektorLinkow <- c()
for (letter in letters) {
linki <- read_html(paste("http://v.prz.edu.pl/?alph=", letter, sep = "")) %>%
html_node("tbody") %>%
html_text2()
pracownicy <- strsplit(linki, "\n")[[1]]
for (pracownik in pracownicy) {
pracownik <- strsplit(pracownik, "\t")[[1]]
wektorLinkow <- c(wektorLinkow, pracownik[2])
}
setTxtProgressBar(pb, i <- i+1)
}
return(wektorLinkow[!is.na(wektorLinkow)])
}
# Pobieranie linkow pracownikow
linki <- pobierzLinki()
pobierzDanePracownikow <- function(wektorLinkow) {
# Przygotowanie zmiennych i progress baru
require("stringr")
print("Prosze czekac, trwa pobieranie danych pracownikow...")
pb <- txtProgressBar(min = 0, max = length(wektorLinkow), initial = 0,style = 3); i <- 0
imiona <- c(); nazwiska <- c(); tytuly <- c(); emaile <- c();
jednostki <- c(); stanowiska <- c(); pokoje <- c(); telefony <- c();
# Zbieranie danych z kazdego linka
for (link in wektorLinkow) {
dane <- read_html(paste("https://", link, sep = "")) %>%
html_node(xpath = '//*[@id="owner-content"]/div/ul') %>%
html_text2()
dane <- strsplit(dane, "\n")[[1]]
tytuly <- c(tytuly, word(dane[1], 1, -3))
imiona <- c(imiona, word(dane[1], -2))
nazwiska <- c(nazwiska, word(dane[1], -1))
emaile <- c(emaile, word(dane[2], 2))
jednostki <- c(jednostki, dane[3])
stanowiska <- c(stanowiska, word(dane[4], 2, -1))
pokoje <- c(pokoje, word(dane[5], 2))
telefony <- c(telefony, word(dane[6], 2))
setTxtProgressBar(pb, i <- i+1)
}
# Zapisanie danych do ramki
danePracownikow <- data.frame(tytul = tytuly, imie = imiona,
nazwisko = nazwiska, email = emaile,
jednostka = jednostki, stanowisko = stanowiska,
pokoj = pokoje, telefon = telefony)
return(danePracownikow)
}
pobierzLinki <- function() {
require("rvest")
print("Prosze czekac, trwa pobieranie linkow...")
pb <- txtProgressBar(min = 0, max = length(letters), initial = 0, style = 3); i <- 0
wektorLinkow <- c()
for (letter in letters) {
linki <- read_html(paste("http://v.prz.edu.pl/?alph=", letter, sep = "")) %>%
html_node("tbody") %>%
html_text2()
pracownicy <- strsplit(linki, "\n")[[1]]
for (pracownik in pracownicy) {
pracownik <- strsplit(pracownik, "\t")[[1]]
wektorLinkow <- c(wektorLinkow, pracownik[2])
}
setTxtProgressBar(pb, i <- i+1)
}
return(wektorLinkow[!is.na(wektorLinkow)])
}
pobierzLinki <- function() {
# Przygotowanie danych i progress baru
require("rvest")
print("Prosze czekac, trwa pobieranie linkow...")
pb <- txtProgressBar(min = 0, max = length(letters), initial = 0, style = 3); i <- 0
wektorLinkow <- c()
# Zbieranie linkow ze stron
for (letter in letters) {
linki <- read_html(paste("http://v.prz.edu.pl/?alph=", letter, sep = "")) %>%
html_node("tbody") %>%
html_text2()
pracownicy <- strsplit(linki, "\n")[[1]]
for (pracownik in pracownicy) {
pracownik <- strsplit(pracownik, "\t")[[1]]
wektorLinkow <- c(wektorLinkow, pracownik[2])
}
setTxtProgressBar(pb, i <- i+1)
}
return(wektorLinkow[!is.na(wektorLinkow)])
}
pobierzDanePracownikow <- function(wektorLinkow) {
# Przygotowanie zmiennych i progress baru
require("stringr")
print("Prosze czekac, trwa pobieranie danych pracownikow...")
pb <- txtProgressBar(min = 0, max = length(wektorLinkow), initial = 0,style = 3); i <- 0
imiona <- c(); nazwiska <- c(); tytuly <- c(); emaile <- c();
jednostki <- c(); stanowiska <- c(); pokoje <- c(); telefony <- c();
# Zbieranie danych z kazdego linka
for (link in wektorLinkow) {
dane <- read_html(paste("https://", link, sep = "")) %>%
html_node(xpath = '//*[@id="owner-content"]/div/ul') %>%
html_text2()
dane <- strsplit(dane, "\n")[[1]]
tytuly <- c(tytuly, word(dane[1], 1, -3))
imiona <- c(imiona, word(dane[1], -2))
nazwiska <- c(nazwiska, word(dane[1], -1))
emaile <- c(emaile, word(dane[2], 2))
jednostki <- c(jednostki, dane[3])
stanowiska <- c(stanowiska, word(dane[4], 2, -1))
pokoje <- c(pokoje, word(dane[5], 2))
telefony <- c(telefony, word(dane[6], 2))
setTxtProgressBar(pb, i <- i+1)
}
# Zapisanie danych do ramki
danePracownikow <- data.frame(tytul = tytuly, imie = imiona,
nazwisko = nazwiska, email = emaile,
jednostka = jednostki, stanowisko = stanowiska,
pokoj = pokoje, telefon = telefony)
return(danePracownikow)
}
linki <- pobierzLinki()
danePracownikow <- pobierzDanePracownikow(linki)
head(danePracownikow)
source('D:/Projekty/R/PolandMortality/scripts/prepare_data.R')
loadData(2021)
loadData(years = 2021)
source('D:/Projekty/R/PolandMortality/scripts/functions.R', encoding = 'UTF-8')
# Plot#3, map
data <- yearlyDeathsByRegions(A2021)
library("ggplot2")
library("sf")
library("rnaturalearth")
library("rnaturalearthdata")
library("rnaturalearthhires")
library("devtools")
theme_set(theme_bw())
PolandMapData <- ne_countries(scale = "medium", country = "Poland",
returnclass = "sf")
States <- ne_states(country = "Poland", returnclass = "sf")
ggplot(data = PolandMapData) +
geom_sf() +
geom_sf(data = States, aes(fill = data$Deaths)) +
scale_fill_viridis_c(alpha = 1, begin = 0, end = 1, direction = -1,
option = "D", values = NULL, space = "Lab",
guide = "colourbar", aesthetics = "colour") +
coord_sf(xlim = c(13,25), ylim = c(48.75, 55), expand = F) +
ggsave("plot#3.png", width = 7, height = 7)
yearlyData <- yearlyDeathsByGroups(A2020)
ggplot(yearlyData, aes(Age, R)) + geom_bar(stat = "identity") +
labs(title = "2020 Deaths", x = "Age group", y = "Deaths") +
ggsave("plots/plot#1.png", width = 13, height = 7)
# Plot#1, showing mortality by age groups
yearlyData <- yearlyDeathsByGroups(A2020)
# Plot#1, showing mortality by age groups
yearlyData <- yearlyDeathsByGroups(A2021)
yearlyData
yearlyData <- yearlyDeathsByGroups(A2021)
ggplot(yearlyData, aes(Age, R)) + geom_bar(stat = "identity") +
labs(title = "2020 Deaths", x = "Age group", y = "Deaths") +
ggsave("plots/plot#1.png", width = 13, height = 7)
loadData(2019:2020)
loadData(year=2019:2020)
test <- data.frame()
for (year in 2019:2021) {
varName <- paste("A", year, sep = '')
test <- rbind(test, weeklyDeaths(get(varName), year))
}
Weeks <- factor(test$Week, labels = 1:53)
ggplot(test, aes(x = Weeks, y = Deaths,
group = Year, color = Year)) +
geom_line(size = 3) + ylim(0, max(test$Deaths)) +
ggsave("plots/plot#2.png", width = 13, height = 7)
ggplot(data = PolandMapData) +
geom_sf() +
geom_sf(data = States, aes(fill = data$Deaths)) +
scale_fill_viridis_c(alpha = 1, begin = 0, end = 1, direction = -1,
option = "D", values = NULL, space = "Lab",
guide = "colourbar", aesthetics = "colour") +
coord_sf(xlim = c(13,25), ylim = c(48.75, 55), expand = F) +
ggsave("plots/plot#3.png", width = 7, height = 7)
# L.1.1
library(ggplot2)
